<?phpclass print_excel_tree extends CI_Model {    function __construct (){        parent::__construct();	}		function index($params=false){        $data=$params->data;        $colModel=$params->colModel;        $excel=$params->excel;		$this->load->library('Myexcel');		$expanded = $params->ExpandColumn;				        $start_col = $excel['start_col'];        $start_row = $excel['start_row'];        $exp = @$excel['start_col'];        if(@$excel['show_col']){            foreach($excel['show_col'] as $key=>$row){                if($key == $expanded){                    for($i=1;$i<$data['info']['max_depth'];$i++):                        $this->myexcel->getActiveSheet()->getColumnDimension($exp)->setWidth(3);                        $exp++;                    endfor;                    $col_head = @$excel['start_col'].@$excel['start_row'].':'.$exp.@$excel['start_row'];                }else{                    $col_head = @$exp.@$excel['start_row'];                }                                    $this->myexcel->writeRow($col_head,@$colModel[$key]['label']);                $this->myexcel->getActiveSheet()->getStyle($col_head)->applyFromArray($excel['border_head']);                $row_data = $excel['start_row'] + 1;                  foreach(@$data['rows'] as $row){                    $new_exp = $excel['start_col'];                    if($key == $expanded){                        for($i=1;$i<$row->n_level;$i++){                            $new_exp++;                                                        }                        $col_data = @$new_exp.$row_data;                    }else{                        $col_data = @$exp.$row_data;                        $space = "";                    }                    $this->myexcel->writeRow($col_data,@$space.@$row->$key);                    $row_data++;                }                // ====== end data                 $end_line = $start_col.($start_row).':'.$exp.$row_data;                $this->myexcel->getActiveSheet()->getStyle($end_line)->applyFromArray($excel['border_all']);                @$exp++;                @$excel['start_col']++;                $end_col = $excel['start_col'];                $end_row = $excel['start_row'];                     }        }else{            foreach($colModel as $key=>$rowModel){                if(@$rowModel['editable'] == true || @$rowModel['viewrecords'] == true){                    // create head title                    if($key == $expanded){                        for($i=1;$i<$data['info']['max_depth'];$i++):                            $this->myexcel->getActiveSheet()->getColumnDimension($exp)->setWidth(3);                            $exp++;                        endfor;                        $col_head = @$excel['start_col'].@$excel['start_row'].':'.$exp.@$excel['start_row'];                    }else{                        $col_head = @$exp.@$excel['start_row'];                    }//                    dump($colModel[$key]['label']);                    $this->myexcel->writeRow($col_head,@$colModel[$key]['label']);                    $this->myexcel->getActiveSheet()->getStyle($col_head)->applyFromArray($excel['border_head']);                     // ======== finish head title                    // for data                        $row_data = $excel['start_row'] + 1;                        foreach(@$data['rows'] as $row){                            $new_exp = $excel['start_col'];                            if($key == $expanded){                                for($i=1;$i<$row->n_level;$i++){                                    $new_exp++;                                                                }                                $col_data = @$new_exp.$row_data;                            }else{                                $col_data = @$exp.$row_data;                                $space = "";                            }                            $this->myexcel->writeRow($col_data,@$space.@$row->$key);                            $row_data++;                        }                    // ====== end data                     $end_line = $start_col.($start_row).':'.$exp.$row_data;	                $this->myexcel->getActiveSheet()->getStyle($end_line)->applyFromArray($excel['border_all']);                    @$exp++;                    @$excel['start_col']++;                    $end_col = $excel['start_col'];                    $end_row = $excel['start_row'];                }	        } 	    }        if(@$excel){            foreach(@$excel as $key=>$row):                if($key=='header'):                    $this->myexcel->writeRow($row['start_col'].$row['start_row'].":".$end_col.$row['start_row'],$row['caption']);                    $this->myexcel->getActiveSheet()->getStyle($row['start_col'].$row['start_row'].":".$end_col.$row['start_row'])->applyFromArray($excel['style_header']);                endif;                if($key=='footer'):                    $this->myexcel->writeRow($start_col.($row_data+1).":".$end_col.($row_data+1),$row['caption']);                    $this->myexcel->getActiveSheet()->getStyle($start_col.($row_data+1).":".$end_col.($row_data+1))->applyFromArray($excel['style_footer']);                endif;            endforeach;        }        	    $this->myexcel->download();		}}?>